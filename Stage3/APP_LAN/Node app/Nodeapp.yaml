---
- name: Setup Node.js Application
  hosts:  app_servers #120.20.10.234 #, 120.20.10.234 # ,120.20.10.238  
  remote_user: root
  become: yes

  tasks:

    - name: Find the process ID of the Node.js program
      command: pgrep -f "app.js"  # Adjust the command to match your Node.js program's start command
      register: nodejs_pid
      ignore_errors: yes  # Ignore errors if the process is not found

    - name: Stop the Node.js program    # it will make a problem when there is no PID to kill
      command: "kill -9 {{ nodejs_pid.stdout | default('') }}"
      when: nodejs_pid.stdout is defined

    - name: Create Nodeapp Directory
      file:
        path: Nodeapp
        state: directory
      become: yes

    - name: Copy test.js from Controller
      copy:
        src: app.js
        dest: Nodeapp/app.js
      become: yes

    - name: Run npm init to generate package.json
      shell: npm init -y
      args:
        chdir: Nodeapp
      environment:
        NODE_PATH: /usr/local/lib/node_modules

    - name: Install Node.js Application Dependencies
      shell: npm install
      args:
        chdir: Nodeapp   # Replace with your app's directory

    - name: Install Axios Module
      shell: npm install axios
      args:
        chdir: Nodeapp 

    - name: Install Node.js Application Dependencies
      shell: npm install mysql2
      args:
        chdir: Nodeapp   # Replace with your app's directory

    - name: Install 'express' module
      shell: npm install express
      args:
        chdir: Nodeapp 
        
    - name: Install 'cors' module
      shell: npm install cors
      args:
        chdir: Nodeapp 


    - name: Run Node.js Application in Background
      command: node /root/Nodeapp/app.js
      args:
        chdir: /root/Nodeapp
      async: 900  # This sets the task to run in the background and returns immediately
      poll: 0  # This tells Ansible not to wait for the task to complete

